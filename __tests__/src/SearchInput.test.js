 Test generated by RoostGPT for test EmojiSearch using AI Type Open AI and AI Model gpt-4-1106-preview

import React from 'react';
import { render, fireEvent } from '@testing-library/react';
import SearchInput from './SearchInput';

describe('SearchInput Component', () => {
  // Test case 1: It should render input element correctly
  test('Should render input element', () => {
    const { getByRole } = render(<SearchInput textChange={() => {}} />);
    const inputElement = getByRole('textbox');
    expect(inputElement).toBeInTheDocument();
  });

  // Test case 2: It should call the textChange prop when input text changes
  test('Should call textChange on input change', () => {
    // Mock the textChange function to test if it gets called
    const textChangeMock = jest.fn();
    const { getByRole } = render(<SearchInput textChange={textChangeMock} />);
    const inputElement = getByRole('textbox');

    // Simulate the input change and check if textChangeMock gets called
    fireEvent.change(inputElement, { target: { value: 'test' } });
    expect(textChangeMock).toHaveBeenCalledWith(expect.anything());
    expect(textChangeMock).toHaveBeenCalledTimes(1);
  });

  // Test case 3: It should not throw an error if textChange is not provided
  test('Should not throw error without textChange prop', () => {
    expect(() => render(<SearchInput />)).not.toThrow();
  });
});

