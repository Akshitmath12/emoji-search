"import React from 'react';\nimport { render, cleanup } from '@testing-library/react';\nimport EmojiResultsRow from '../EmojiResultRow';\n\nafterEach(cleanup);\n\ndescribe('EmojiResultRow', () => {\n  const defaultProps = {\n    title: 'Smile',\n    symbol: 'ðŸ˜€'\n  };\n\n  const setup = (props = {}) => {\n    const setupProps = { ...defaultProps, ...props };\n    return render(<EmojiResultsRow {...setupProps} />);\n  };\n\n  test('renders without crashing', () => {\n    const { getByTestId } = setup();\n    const emojiRow = getByTestId('emoji-row');\n    expect(emojiRow).toBeInTheDocument();\n  });\n\n  test('renders with default props', () => {\n    const { getByText } = setup();\n    expect(getByText('Smile')).toBeInTheDocument();\n    expect(getByText('Click to copy emoji')).toBeInTheDocument();\n  });\n\n  test('renders with passed props', () => {\n    const { getByText } = setup({ title: 'Laugh', symbol: 'ðŸ˜‚' });\n    expect(getByText('Laugh')).toBeInTheDocument();\n    expect(getByText('Click to copy emoji')).toBeInTheDocument();\n  });\n\n  test('renders image with correct src', () => {\n    const { getByAltText } = setup();\n    const image = getByAltText('Smile');\n    expect(image.src).toContain('f600.png');\n  });\n\n  test('renders error when no props passed', () => {\n    console.error = jest.fn();\n    expect(() => render(<EmojiResultsRow />)).toThrow();\n    expect(console.error).toHaveBeenCalled();\n  });\n});\n"