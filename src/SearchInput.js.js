"import React from 'react';\nimport { render, fireEvent } from '@testing-library/react';\nimport SearchInput from './SearchInput';\n\ndescribe('SearchInput', () => {\n  let expectedProps;\n\n  beforeEach(() => {\n    expectedProps = {\n      textChange: jest.fn(),\n    };\n  });\n\n  test('renders an input element', () => {\n    const { getByRole } = render(<SearchInput {...expectedProps} />);\n    expect(getByRole('textbox')).toBeInTheDocument();\n  });\n\n  test('calls the textChange function when the input value changes', () => {\n    const { getByRole } = render(<SearchInput {...expectedProps} />);\n    fireEvent.change(getByRole('textbox'), { target: { value: 'test' }});\n    expect(expectedProps.textChange).toHaveBeenCalled();\n  });\n\n  test('does not call the textChange function if it is not provided', () => {\n    const { getByRole } = render(<SearchInput />);\n    fireEvent.change(getByRole('textbox'), { target: { value: 'test' }});\n    expect(expectedProps.textChange).not.toHaveBeenCalled();\n  });\n});\n"