 Test generated by RoostGPT for test EmojiSearch using AI Type Open AI and AI Model gpt-4

import React from "react";
import { render, unmountComponentAtNode } from "react-dom";
import { act } from "react-dom/test-utils";
import EmojiResultRow from "./EmojiResultRow";

let container = null;
beforeEach(() => {
  container = document.createElement("div");
  document.body.appendChild(container);
});

afterEach(() => {
  unmountComponentAtNode(container);
  container.remove();
  container = null;
});

describe("EmojiResultRow Component", () => {
  test("It should render without crashing", () => {
    act(() => {
      render(<EmojiResultRow />, container);
    });
    expect(container.textContent).toBe("");
  });

  test("It should render the passed props correctly", () => {
    const fakeEmoji = {
      title: "Grinning",
      symbol: "ðŸ˜€",
      keywords: "grinning face happy smiley emotion emotion",
    };
    act(() => {
      render(<EmojiResultRow key={fakeEmoji.title} emoji={fakeEmoji} />, container);
    });
    expect(container.textContent).toContain(fakeEmoji.title);
    expect(container.textContent).toContain(fakeEmoji.symbol);
  });

  test("It should handle click event", () => {
    const mockOnClick = jest.fn();
    const fakeEmoji = {
      title: "Grinning",
      symbol: "ðŸ˜€",
      keywords: "grinning face happy smiley emotion emotion",
    };
    act(() => {
      render(<EmojiResultRow key={fakeEmoji.title} emoji={fakeEmoji} onClick={mockOnClick} />, container);
    });
    const button = document.querySelector("[data-testid='emoji-button']");
    act(() => {
      button.dispatchEvent(new MouseEvent("click", { bubbles: true }));
    });
    expect(mockOnClick).toHaveBeenCalledTimes(1);
  });
});
