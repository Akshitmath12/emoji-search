"import React from 'react';\nimport { render, unmountComponentAtNode } from 'react-dom';\nimport { act } from 'react-dom/test-utils';\nimport App from './App';\n\nlet container = null;\n\nbeforeEach(() => {\n  // setup a DOM element as a render target\n  container = document.createElement('div');\n  document.body.appendChild(container);\n});\n\nafterEach(() => {\n  // cleanup on exiting\n  unmountComponentAtNode(container);\n  container.remove();\n  container = null;\n});\n\ndescribe(\"App Component\", () => {\n  test(\"renders without crashing\", () => {\n    act(() => {\n      render(<App />, container);\n    });\n    expect(container.textContent).toBe(\"Hello, World!\");\n  });\n\n  test(\"renders with default props\", () => {\n    act(() => {\n      render(<App />, container);\n    });\n    expect(container.querySelector(\"[data-testid='my-element']\").textContent).toBe(\"Default Text\");\n  });\n\n  test(\"renders error message when fetch fails\", async () => {\n    // Mock failing fetch\n    global.fetch = jest.fn(() =>\n      Promise.resolve({\n        json: () => Promise.reject(\"Fetch failed\"),\n      })\n    );\n\n    // Use the asynchronous version of act to apply resolved promises\n    await act(async () => {\n      render(<App />, container);\n    });\n\n    expect(container.textContent).toBe(\"Fetch failed\");\n  });\n});\n"